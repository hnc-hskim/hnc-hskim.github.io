<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Clouds on My New Hugo Site</title>
    <link>https://hnc-hskim.github.io/cloud/</link>
    <description>Recent content in Clouds on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Fri, 22 Jul 2022 11:01:46 +0900</lastBuildDate><atom:link href="https://hnc-hskim.github.io/cloud/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Helm Repository</title>
      <link>https://hnc-hskim.github.io/cloud/helm/helm-repository/</link>
      <pubDate>Fri, 22 Jul 2022 11:01:46 +0900</pubDate>
      
      <guid>https://hnc-hskim.github.io/cloud/helm/helm-repository/</guid>
      <description>Github에 helm repository 만들기 1. Github으로 이동 2. New 버튼을 클릭한다.  Repository name(helm-charts) Public 체크 Add a README file 체크   3. 생성된 Repository 화면 4. 접근 URL 셋팅   리파지터리 홈 탭 메뉴의 Settings를 선택한다.
  좌측 메뉴에 Pages를 선택한다.   main 브랜치를 선택후 save 버튼을 클릭한다.   publicshed 주소가 나오는데 이 주소가 helm repository 주소가 된다.   5. Local Repository 만들기  생성한 Repository를 로컬에 clone한다.</description>
    </item>
    
    <item>
      <title>Monitoring</title>
      <link>https://hnc-hskim.github.io/cloud/rancher/monitoring/</link>
      <pubDate>Tue, 19 Jul 2022 13:59:12 +0900</pubDate>
      
      <guid>https://hnc-hskim.github.io/cloud/rancher/monitoring/</guid>
      <description>Rancher에 모니터링 도구 설치 및 GPU 모니터링 References  [참고1] https://nvidia.github.io/gpu-monitoring-tools/ [참고2] https://passwd.tistory.com/entry/NVIDIAgpu-monitoring-tools-dcgm-exporter-CrashLoopBackOff  rancher에서 monitoring 도구 설치   Apps -&amp;gt; Charts 이동후 monitoring 검색   Monitoring 설치 설치를 진행하면 모니터링 앱은 Rancher 의 cattle-monitoring-system namespace 에 배포됨
(설치후 랜처 로그아웃후 다시 로그인)
  네비게이션 영역을 보면 Monitoring 메뉴가 추가되어 있음   대쉬보드 확인   grafana 확인   그라파나에 로그인합니다. Grafana 인스턴스의 기본 관리자 사용자 이름과 비밀번호는 입니다 admin/prom-operator.</description>
    </item>
    
    <item>
      <title>Scheduling</title>
      <link>https://hnc-hskim.github.io/cloud/operation/scheduling/</link>
      <pubDate>Fri, 15 Jul 2022 08:52:22 +0900</pubDate>
      
      <guid>https://hnc-hskim.github.io/cloud/operation/scheduling/</guid>
      <description>노드에 파드 할당하기 특정한 노드(들) 집합에서만 동작하도록 파드를 제한할 수 있다. 이를 수행하는 방법에는 여러 가지가 있으며 권장되는 접근 방식은 모두 레이블 셀렉터를 사용하여 선택을 용이하게 한다. 보통은 스케줄러가 자동으로 합리적인 배치(예: 자원이 부족한 노드에 파드를 배치하지 않도록 노드 간에 파드를 분배)를 수행하기에 이러한 제약 조건은 필요하지 않다. 그러나, 예를 들어 SSD가 장착된 머신에 파드가 배포되도록 하거나 또는 많은 통신을 하는 두 개의 서로 다른 서비스의 파드를 동일한 가용성 영역(availability zone)에 배치하는 경우와 같이, 파드가 어느 노드에 배포될지를 제어해야 하는 경우도 있다.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hnc-hskim.github.io/cloud/isms-p/job/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hnc-hskim.github.io/cloud/isms-p/job/</guid>
      <description>참고 참고
참고 - EBS-backed Linux AMI 생성
처리 방법
 EC2 생성   AMI ID : ami-0d4bbf30d9907be82  EIP 할당 및 접속   취약점 조치  AMI 이미지 생성  [1번] ■ 기준: /etc/pam.d/system-auth(common-auth) 파일에 아래와 같은 설정이 있으면 양호 ■ : (auth required /lib/security/pam_tally.so deny=5 unlock_time=120 no_magic_root) ■ : (account required /lib/security/pam_tally.so no_magic_root reset) ■ 현황
☞ /etc/pam.d/system-auth 파일 설정(auth, account) User changes will be destroyed the next time authconfig is run.</description>
    </item>
    
  </channel>
</rss>
